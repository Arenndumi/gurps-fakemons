{
	"type": "character",
	"version": 4,
	"id": "306e747a-923e-433f-8aab-ee0bf5b09786",
	"total_points": -480,
	"points_record": [
		{
			"when": "2023-08-29T19:15:09-03:00",
			"points": -480
		}
	],
	"profile": {
		"name": "ratinrato",
		"portrait": ""
	},
	"settings": {
		"page": {
			"paper_size": "letter",
			"orientation": "portrait",
			"top_margin": "0.25 in",
			"left_margin": "0.25 in",
			"bottom_margin": "0.25 in",
			"right_margin": "0.25 in"
		},
		"block_layout": [
			"reactions conditional_modifiers",
			"melee",
			"ranged",
			"traits skills",
			"spells",
			"equipment",
			"other_equipment",
			"notes"
		],
		"attributes": [
			{
				"id": "st",
				"type": "integer",
				"name": "ST",
				"full_name": "Strength",
				"attribute_base": "10",
				"cost_per_point": 10,
				"cost_adj_percent_per_sm": 10
			},
			{
				"id": "dx",
				"type": "integer",
				"name": "DX",
				"full_name": "Dexterity",
				"attribute_base": "10",
				"cost_per_point": 20
			},
			{
				"id": "iq",
				"type": "integer",
				"name": "IQ",
				"full_name": "Intelligence",
				"attribute_base": "10",
				"cost_per_point": 20
			},
			{
				"id": "ht",
				"type": "integer",
				"name": "HT",
				"full_name": "Health",
				"attribute_base": "10",
				"cost_per_point": 10
			},
			{
				"id": "will",
				"type": "integer",
				"name": "Will",
				"attribute_base": "$iq",
				"cost_per_point": 5
			},
			{
				"id": "fright_check",
				"type": "integer",
				"name": "Fright Check",
				"attribute_base": "$will",
				"cost_per_point": 2
			},
			{
				"id": "per",
				"type": "integer",
				"name": "Per",
				"full_name": "Perception",
				"attribute_base": "$iq",
				"cost_per_point": 5
			},
			{
				"id": "vision",
				"type": "integer",
				"name": "Vision",
				"attribute_base": "$per",
				"cost_per_point": 2
			},
			{
				"id": "hearing",
				"type": "integer",
				"name": "Hearing",
				"attribute_base": "$per",
				"cost_per_point": 2
			},
			{
				"id": "taste_smell",
				"type": "integer",
				"name": "Taste \u0026 Smell",
				"attribute_base": "$per",
				"cost_per_point": 2
			},
			{
				"id": "touch",
				"type": "integer",
				"name": "Touch",
				"attribute_base": "$per",
				"cost_per_point": 2
			},
			{
				"id": "basic_speed",
				"type": "decimal",
				"name": "Basic Speed",
				"attribute_base": "($dx+$ht)/4",
				"cost_per_point": 20
			},
			{
				"id": "basic_move",
				"type": "integer",
				"name": "Basic Move",
				"attribute_base": "floor($basic_speed)",
				"cost_per_point": 5
			},
			{
				"id": "fp",
				"type": "pool",
				"name": "FP",
				"full_name": "Fatigue Points",
				"attribute_base": "$ht",
				"cost_per_point": 3,
				"thresholds": [
					{
						"state": "Unconscious",
						"expression": "-$fp",
						"ops": [
							"halve_move",
							"halve_dodge",
							"halve_st"
						]
					},
					{
						"state": "Collapse",
						"expression": "0",
						"explanation": "\u003chtml\u003e\u003cbody\u003e\n\u003cb\u003eRoll vs. Will\u003c/b\u003e to do anything besides talk or rest; failure causes unconsciousness\u003cbr\u003e\nEach FP you lose below 0 also causes 1 HP of injury\u003cbr\u003e\nMove, Dodge and ST are halved (B426)\n\u003c/body\u003e\u003c/html\u003e",
						"ops": [
							"halve_move",
							"halve_dodge",
							"halve_st"
						]
					},
					{
						"state": "Tired",
						"expression": "round($fp/3)",
						"explanation": "Move, Dodge and ST are halved (B426)",
						"ops": [
							"halve_move",
							"halve_dodge",
							"halve_st"
						]
					},
					{
						"state": "Tiring",
						"expression": "$fp-1"
					},
					{
						"state": "Rested",
						"expression": "$fp"
					}
				]
			},
			{
				"id": "hp",
				"type": "pool",
				"name": "HP",
				"full_name": "Hit Points",
				"attribute_base": "$st",
				"cost_per_point": 2,
				"cost_adj_percent_per_sm": 10,
				"thresholds": [
					{
						"state": "Dead",
						"expression": "round(-$hp*5)",
						"ops": [
							"halve_move",
							"halve_dodge"
						]
					},
					{
						"state": "Dying #4",
						"expression": "round(-$hp*4)",
						"explanation": "\u003chtml\u003e\u003cbody\u003e\n\u003cb\u003eRoll vs. HT\u003c/b\u003e to avoid death\u003cbr\u003e\n\u003cb\u003eRoll vs. HT-4\u003c/b\u003e every second to avoid falling unconscious\u003cbr\u003e\nMove and Dodge are halved (B419)\n\u003c/body\u003e\u003c/html\u003e",
						"ops": [
							"halve_move",
							"halve_dodge"
						]
					},
					{
						"state": "Dying #3",
						"expression": "round(-$hp*3)",
						"explanation": "\u003chtml\u003e\u003cbody\u003e\n\u003cb\u003eRoll vs. HT\u003c/b\u003e to avoid death\u003cbr\u003e\n\u003cb\u003eRoll vs. HT-3\u003c/b\u003e every second to avoid falling unconscious\u003cbr\u003e\nMove and Dodge are halved (B419)\n\u003c/body\u003e\u003c/html\u003e",
						"ops": [
							"halve_move",
							"halve_dodge"
						]
					},
					{
						"state": "Dying #2",
						"expression": "round(-$hp*2)",
						"explanation": "\u003chtml\u003e\u003cbody\u003e\n\u003cb\u003eRoll vs. HT\u003c/b\u003e to avoid death\u003cbr\u003e\n\u003cb\u003eRoll vs. HT-2\u003c/b\u003e every second to avoid falling unconscious\u003cbr\u003e\nMove and Dodge are halved (B419)\n\u003c/body\u003e\u003c/html\u003e",
						"ops": [
							"halve_move",
							"halve_dodge"
						]
					},
					{
						"state": "Dying #1",
						"expression": "-$hp",
						"explanation": "\u003chtml\u003e\u003cbody\u003e\n\u003cb\u003eRoll vs. HT\u003c/b\u003e to avoid death\u003cbr\u003e\n\u003cb\u003eRoll vs. HT-1\u003c/b\u003e every second to avoid falling unconscious\u003cbr\u003e\nMove and Dodge are halved (B419)\n\u003c/body\u003e\u003c/html\u003e",
						"ops": [
							"halve_move",
							"halve_dodge"
						]
					},
					{
						"state": "Collapse",
						"expression": "0",
						"explanation": "\u003chtml\u003e\u003cbody\u003e\n\u003cb\u003eRoll vs. HT\u003c/b\u003e every second to avoid falling unconscious\u003cbr\u003e\nMove and Dodge are halved (B419)\n\u003c/body\u003e\u003c/html\u003e",
						"ops": [
							"halve_move",
							"halve_dodge"
						]
					},
					{
						"state": "Reeling",
						"expression": "round($hp/3)",
						"explanation": "Move and Dodge are halved (B419)",
						"ops": [
							"halve_move",
							"halve_dodge"
						]
					},
					{
						"state": "Wounded",
						"expression": "$hp-1"
					},
					{
						"state": "Healthy",
						"expression": "$hp"
					}
				]
			}
		],
		"body_type": {
			"name": "Quadruped",
			"roll": "3d",
			"locations": [
				{
					"id": "eye",
					"choice_name": "Eyes",
					"table_name": "Eyes",
					"hit_penalty": -9,
					"description": "An attack that misses by 1 hits the torso instead. Only\nimpaling (imp), piercing (pi-, pi, pi+, pi++), and\ntight-beam burning (burn) attacks can target the eye – and\nonly from the front or sides. Injury over HP÷10 blinds the\neye. Otherwise, treat as skull, but without the extra DR!",
					"calc": {
						"roll_range": "-",
						"dr": {
							"all": 0
						}
					}
				},
				{
					"id": "skull",
					"choice_name": "Skull",
					"table_name": "Skull",
					"slots": 2,
					"hit_penalty": -7,
					"dr_bonus": 2,
					"description": "An attack that misses by 1 hits the torso instead. Wounding\nmodifier is x4. Knockdown rolls are at -10. Critical hits\nuse the Critical Head Blow Table (B556). Exception: These\nspecial effects do not apply to toxic (tox) damage.",
					"calc": {
						"roll_range": "3-4",
						"dr": {
							"all": 2
						}
					}
				},
				{
					"id": "face",
					"choice_name": "Face",
					"table_name": "Face",
					"slots": 1,
					"hit_penalty": -5,
					"description": "An attack that misses by 1 hits the torso instead. Jaw,\ncheeks, nose, ears, etc. If the target has an open-faced\nhelmet, ignore its DR. Knockdown rolls are at -5. Critical\nhits use the Critical Head Blow Table (B556). Corrosion\n(cor) damage gets a x1½ wounding modifier, and if it\ninflicts a major wound, it also blinds one eye (both eyes on\ndamage over full HP). Random attacks from behind hit the\nskull instead.",
					"calc": {
						"roll_range": "5",
						"dr": {
							"all": 0
						}
					}
				},
				{
					"id": "neck",
					"choice_name": "Neck",
					"table_name": "Neck",
					"slots": 1,
					"hit_penalty": -5,
					"description": "An attack that misses by 1 hits the torso instead. Neck and\nthroat. Increase the wounding multiplier of crushing (cr)\nand corrosion (cor) attacks to x1½, and that of cutting\n(cut) damage to x2. At the GM’s option, anyone killed by a\ncutting (cut) blow to the neck is decapitated!",
					"calc": {
						"roll_range": "6",
						"dr": {
							"all": 0
						}
					}
				},
				{
					"id": "leg",
					"choice_name": "Leg",
					"table_name": "Foreleg",
					"slots": 2,
					"hit_penalty": -2,
					"description": "Reduce the wounding multiplier of large piercing (pi+), huge\npiercing (pi++), and impaling (imp) damage to x1. Any major\nwound (loss of over ½ HP from one blow) cripples the limb.\nDamage beyond that threshold is lost.",
					"calc": {
						"roll_range": "7-8",
						"dr": {
							"all": 0
						}
					}
				},
				{
					"id": "torso",
					"choice_name": "Torso",
					"table_name": "Torso",
					"slots": 3,
					"calc": {
						"roll_range": "9-11",
						"dr": {
							"all": 0
						}
					}
				},
				{
					"id": "groin",
					"choice_name": "Groin",
					"table_name": "Groin",
					"slots": 1,
					"hit_penalty": -3,
					"description": "An attack that misses by 1 hits the torso instead. Human\nmales and the males of similar species suffer double shock\nfrom crushing (cr) damage, and get -5 to knockdown rolls.\nOtherwise, treat as a torso hit.",
					"calc": {
						"roll_range": "12",
						"dr": {
							"all": 0
						}
					}
				},
				{
					"id": "leg",
					"choice_name": "Leg",
					"table_name": "Hindleg",
					"slots": 2,
					"hit_penalty": -2,
					"description": "Reduce the wounding multiplier of large piercing (pi+), huge\npiercing (pi++), and impaling (imp) damage to x1. Any major\nwound (loss of over ½ HP from one blow) cripples the limb.\nDamage beyond that threshold is lost.",
					"calc": {
						"roll_range": "13-14",
						"dr": {
							"all": 0
						}
					}
				},
				{
					"id": "foot",
					"choice_name": "Foot",
					"table_name": "Foot",
					"slots": 2,
					"hit_penalty": -4,
					"description": "Reduce the wounding multiplier of large piercing (pi+), huge\npiercing (pi++), and impaling (imp) damage to x1. Any major\nwound (loss of over ⅓ HP from one blow) cripples the\nextremity. Damage beyond that threshold is lost.",
					"calc": {
						"roll_range": "15-16",
						"dr": {
							"all": 0
						}
					}
				},
				{
					"id": "tail",
					"choice_name": "Tail",
					"table_name": "Tail",
					"slots": 2,
					"hit_penalty": -3,
					"description": "If a tail counts as an Extra Arm or a Striker, or is a fish\ntail, treat it as a limb (arm, leg) for crippling purposes;\notherwise, treat it as an extremity (hand, foot). A crippled\ntail affects balance. For a ground creature, this gives -1\nDX. For a swimmer or flyer, this gives -2 DX and halves\nMove. If the creature has no tail, or a very short one (like\na rabbit), treat as torso.",
					"calc": {
						"roll_range": "17-18",
						"dr": {
							"all": 0
						}
					}
				},
				{
					"id": "vitals",
					"choice_name": "Vitals",
					"table_name": "Vitals",
					"hit_penalty": -3,
					"description": "An attack that misses by 1 hits the torso instead. Heart,\nlungs, kidneys, etc. Increase the wounding modifier for an\nimpaling (imp) or any piercing (pi-, pi, pi+, pi++) attack\nto x3. Increase the wounding modifier for a tight-beam\nburning (burn) attack to x2. Other attacks cannot target the\nvitals.",
					"calc": {
						"roll_range": "-",
						"dr": {
							"all": 0
						}
					}
				}
			]
		},
		"damage_progression": "basic_set",
		"default_length_units": "m",
		"default_weight_units": "kg",
		"user_description_display": "tooltip",
		"modifiers_display": "inline",
		"notes_display": "inline",
		"skill_level_adj_display": "tooltip",
		"show_spell_adj": true,
		"exclude_unspent_points_from_total": false
	},
	"attributes": [
		{
			"attr_id": "st",
			"adj": -10,
			"calc": {
				"value": 0,
				"points": -100
			}
		},
		{
			"attr_id": "dx",
			"adj": -10,
			"calc": {
				"value": 0,
				"points": -200
			}
		},
		{
			"attr_id": "iq",
			"adj": -10,
			"calc": {
				"value": 0,
				"points": -200
			}
		},
		{
			"attr_id": "ht",
			"adj": -10,
			"calc": {
				"value": 0,
				"points": -100
			}
		},
		{
			"attr_id": "will",
			"adj": 0,
			"calc": {
				"value": 0,
				"points": 0
			}
		},
		{
			"attr_id": "fright_check",
			"adj": 0,
			"calc": {
				"value": 0,
				"points": 0
			}
		},
		{
			"attr_id": "per",
			"adj": 0,
			"calc": {
				"value": 0,
				"points": 0
			}
		},
		{
			"attr_id": "vision",
			"adj": 0,
			"calc": {
				"value": 0,
				"points": 0
			}
		},
		{
			"attr_id": "hearing",
			"adj": 0,
			"calc": {
				"value": 0,
				"points": 0
			}
		},
		{
			"attr_id": "taste_smell",
			"adj": 0,
			"calc": {
				"value": 0,
				"points": 0
			}
		},
		{
			"attr_id": "touch",
			"adj": 0,
			"calc": {
				"value": 0,
				"points": 0
			}
		},
		{
			"attr_id": "basic_speed",
			"adj": 0,
			"calc": {
				"value": 0,
				"points": 0
			}
		},
		{
			"attr_id": "basic_move",
			"adj": 0,
			"calc": {
				"value": 0,
				"points": 0
			}
		},
		{
			"attr_id": "fp",
			"adj": 0,
			"calc": {
				"value": 0,
				"current": 0,
				"points": 0
			}
		},
		{
			"attr_id": "hp",
			"adj": 0,
			"calc": {
				"value": 0,
				"current": 0,
				"points": 0
			}
		}
	],
	"skills": [
		{
			"id": "c7027645-dc08-45be-96b7-a103b0339092",
			"type": "skill",
			"name": "Innate Attack",
			"reference": "B201",
			"tags": [
				"Combat",
				"Ranged Combat",
				"Weapon"
			],
			"specialization": "Breath",
			"difficulty": "dx/e",
			"points": 2,
			"defaulted_from": {
				"type": "skill",
				"name": "Innate Attack",
				"specialization": "Gaze",
				"modifier": -2,
				"level": -1,
				"adjusted_level": -1
			},
			"defaults": [
				{
					"type": "dx",
					"modifier": -4
				},
				{
					"type": "skill",
					"name": "Innate Attack",
					"modifier": -2
				}
			],
			"calc": {
				"level": 1,
				"rsl": "DX+1"
			}
		},
		{
			"id": "37f279b6-a6c3-4315-beb2-61c5ff0e2ee6",
			"type": "skill",
			"name": "Innate Attack",
			"reference": "B201",
			"tags": [
				"Combat",
				"Ranged Combat",
				"Weapon"
			],
			"specialization": "Gaze",
			"difficulty": "dx/e",
			"points": 2,
			"defaulted_from": {
				"type": "dx",
				"modifier": -4,
				"level": -4,
				"adjusted_level": -4
			},
			"defaults": [
				{
					"type": "dx",
					"modifier": -4
				},
				{
					"type": "skill",
					"name": "Innate Attack",
					"modifier": -2
				}
			],
			"calc": {
				"level": 1,
				"rsl": "DX+1"
			}
		},
		{
			"id": "370c5b4c-9b47-4dda-99ba-7c533ea74895",
			"type": "skill",
			"name": "Brawling",
			"reference": "B182",
			"tags": [
				"Combat",
				"Melee Combat",
				"Weapon"
			],
			"difficulty": "dx/e",
			"points": 2,
			"features": [
				{
					"type": "weapon_bonus",
					"selection_type": "weapons_with_required_skill",
					"name": {
						"compare": "is",
						"qualifier": "Brawling"
					},
					"level": {
						"compare": "at_least",
						"qualifier": 2
					},
					"amount": 1,
					"per_level": true
				}
			],
			"calc": {
				"level": 1,
				"rsl": "DX+1"
			}
		},
		{
			"id": "df639367-77b9-48e4-868f-2e7a09f5f406",
			"type": "skill",
			"name": "Tracking",
			"reference": "B226",
			"tags": [
				"Exploration",
				"Outdoor"
			],
			"difficulty": "per/a",
			"points": 2,
			"defaulted_from": {
				"type": "per",
				"modifier": -5,
				"level": -5,
				"adjusted_level": -5
			},
			"defaults": [
				{
					"type": "per",
					"modifier": -5
				},
				{
					"type": "skill",
					"name": "Naturalist",
					"modifier": -5
				}
			],
			"calc": {}
		}
	],
	"notes": [
		{
			"id": "69dcb30e-cb58-40cf-9101-d365c4051d3a",
			"type": "note",
			"text": "image, name and concept copyright: bagdex"
		}
	],
	"created_date": "2020-05-16T00:00:00-07:00",
	"modified_date": "2023-09-07T00:46:29-03:00",
	"calc": {
		"swing": "1d-5",
		"thrust": "1d-6",
		"basic_lift": "0 lb",
		"move": [
			0,
			0,
			0,
			0,
			0
		],
		"dodge": [
			1,
			1,
			1,
			1,
			1
		]
	}
}
